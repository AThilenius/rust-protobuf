// This file is generated by rust-protobuf 1.7.0. Do not edit
// @generated

// https://github.com/Manishearth/rust-clippy/issues/702
#![allow(unknown_lints)]
#![allow(clippy)]

#![cfg_attr(rustfmt, rustfmt_skip)]

#![allow(box_pointers)]
#![allow(dead_code)]
#![allow(missing_docs)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(trivial_casts)]
#![allow(unsafe_code)]
#![allow(unused_imports)]
#![allow(unused_results)]

use protobuf::Message as Message_imported_for_functions;
use protobuf::ProtobufEnum as ProtobufEnum_imported_for_functions;

pub mod exts {
    use protobuf::Message as Message_imported_for_functions;

    pub const expose_oneof_all: ::protobuf::ext::ExtFieldOptional<::protobuf::descriptor::FileOptions, ::protobuf::types::ProtobufTypeBool> = ::protobuf::ext::ExtFieldOptional { field_number: 17001, phantom: ::std::marker::PhantomData };

    pub const expose_fields_all: ::protobuf::ext::ExtFieldOptional<::protobuf::descriptor::FileOptions, ::protobuf::types::ProtobufTypeBool> = ::protobuf::ext::ExtFieldOptional { field_number: 17003, phantom: ::std::marker::PhantomData };

    pub const generate_accessors_all: ::protobuf::ext::ExtFieldOptional<::protobuf::descriptor::FileOptions, ::protobuf::types::ProtobufTypeBool> = ::protobuf::ext::ExtFieldOptional { field_number: 17004, phantom: ::std::marker::PhantomData };

    pub const carllerche_bytes_for_bytes_all: ::protobuf::ext::ExtFieldOptional<::protobuf::descriptor::FileOptions, ::protobuf::types::ProtobufTypeBool> = ::protobuf::ext::ExtFieldOptional { field_number: 17011, phantom: ::std::marker::PhantomData };

    pub const carllerche_bytes_for_string_all: ::protobuf::ext::ExtFieldOptional<::protobuf::descriptor::FileOptions, ::protobuf::types::ProtobufTypeBool> = ::protobuf::ext::ExtFieldOptional { field_number: 17012, phantom: ::std::marker::PhantomData };

    pub const repeated_field_vec_all: ::protobuf::ext::ExtFieldOptional<::protobuf::descriptor::FileOptions, ::protobuf::types::ProtobufTypeBool> = ::protobuf::ext::ExtFieldOptional { field_number: 17020, phantom: ::std::marker::PhantomData };

    pub const expose_oneof: ::protobuf::ext::ExtFieldOptional<::protobuf::descriptor::MessageOptions, ::protobuf::types::ProtobufTypeBool> = ::protobuf::ext::ExtFieldOptional { field_number: 17001, phantom: ::std::marker::PhantomData };

    pub const expose_fields: ::protobuf::ext::ExtFieldOptional<::protobuf::descriptor::MessageOptions, ::protobuf::types::ProtobufTypeBool> = ::protobuf::ext::ExtFieldOptional { field_number: 17003, phantom: ::std::marker::PhantomData };

    pub const generate_accessors: ::protobuf::ext::ExtFieldOptional<::protobuf::descriptor::MessageOptions, ::protobuf::types::ProtobufTypeBool> = ::protobuf::ext::ExtFieldOptional { field_number: 17004, phantom: ::std::marker::PhantomData };

    pub const carllerche_bytes_for_bytes: ::protobuf::ext::ExtFieldOptional<::protobuf::descriptor::MessageOptions, ::protobuf::types::ProtobufTypeBool> = ::protobuf::ext::ExtFieldOptional { field_number: 17011, phantom: ::std::marker::PhantomData };

    pub const carllerche_bytes_for_string: ::protobuf::ext::ExtFieldOptional<::protobuf::descriptor::MessageOptions, ::protobuf::types::ProtobufTypeBool> = ::protobuf::ext::ExtFieldOptional { field_number: 17012, phantom: ::std::marker::PhantomData };

    pub const repeated_field_vec: ::protobuf::ext::ExtFieldOptional<::protobuf::descriptor::MessageOptions, ::protobuf::types::ProtobufTypeBool> = ::protobuf::ext::ExtFieldOptional { field_number: 17020, phantom: ::std::marker::PhantomData };

    pub const expose_fields_field: ::protobuf::ext::ExtFieldOptional<::protobuf::descriptor::FieldOptions, ::protobuf::types::ProtobufTypeBool> = ::protobuf::ext::ExtFieldOptional { field_number: 17003, phantom: ::std::marker::PhantomData };

    pub const generate_accessors_field: ::protobuf::ext::ExtFieldOptional<::protobuf::descriptor::FieldOptions, ::protobuf::types::ProtobufTypeBool> = ::protobuf::ext::ExtFieldOptional { field_number: 17004, phantom: ::std::marker::PhantomData };

    pub const carllerche_bytes_for_bytes_field: ::protobuf::ext::ExtFieldOptional<::protobuf::descriptor::FieldOptions, ::protobuf::types::ProtobufTypeBool> = ::protobuf::ext::ExtFieldOptional { field_number: 17011, phantom: ::std::marker::PhantomData };

    pub const carllerche_bytes_for_string_field: ::protobuf::ext::ExtFieldOptional<::protobuf::descriptor::FieldOptions, ::protobuf::types::ProtobufTypeBool> = ::protobuf::ext::ExtFieldOptional { field_number: 17012, phantom: ::std::marker::PhantomData };

    pub const repeated_field_vec_field: ::protobuf::ext::ExtFieldOptional<::protobuf::descriptor::FieldOptions, ::protobuf::types::ProtobufTypeBool> = ::protobuf::ext::ExtFieldOptional { field_number: 17020, phantom: ::std::marker::PhantomData };
}

static file_descriptor_proto_data: &'static [u8] = b"\
    \n\x0frustproto.proto\x12\trustproto\x1a\x20google/protobuf/descriptor.p\
    roto:H\n\x10expose_oneof_all\x18\xe9\x84\x01\x20\x01(\x08\x12\x1c.google\
    .protobuf.FileOptionsR\x0eexposeOneofAll:J\n\x11expose_fields_all\x18\
    \xeb\x84\x01\x20\x01(\x08\x12\x1c.google.protobuf.FileOptionsR\x0fexpose\
    FieldsAll:T\n\x16generate_accessors_all\x18\xec\x84\x01\x20\x01(\x08\x12\
    \x1c.google.protobuf.FileOptionsR\x14generateAccessorsAll:b\n\x1ecarller\
    che_bytes_for_bytes_all\x18\xf3\x84\x01\x20\x01(\x08\x12\x1c.google.prot\
    obuf.FileOptionsR\x1acarllercheBytesForBytesAll:d\n\x1fcarllerche_bytes_\
    for_string_all\x18\xf4\x84\x01\x20\x01(\x08\x12\x1c.google.protobuf.File\
    OptionsR\x1bcarllercheBytesForStringAll:S\n\x16repeated_field_vec_all\
    \x18\xfc\x84\x01\x20\x01(\x08\x12\x1c.google.protobuf.FileOptionsR\x13re\
    peatedFieldVecAll:D\n\x0cexpose_oneof\x18\xe9\x84\x01\x20\x01(\x08\x12\
    \x1f.google.protobuf.MessageOptionsR\x0bexposeOneof:F\n\rexpose_fields\
    \x18\xeb\x84\x01\x20\x01(\x08\x12\x1f.google.protobuf.MessageOptionsR\
    \x0cexposeFields:P\n\x12generate_accessors\x18\xec\x84\x01\x20\x01(\x08\
    \x12\x1f.google.protobuf.MessageOptionsR\x11generateAccessors:^\n\x1acar\
    llerche_bytes_for_bytes\x18\xf3\x84\x01\x20\x01(\x08\x12\x1f.google.prot\
    obuf.MessageOptionsR\x17carllercheBytesForBytes:`\n\x1bcarllerche_bytes_\
    for_string\x18\xf4\x84\x01\x20\x01(\x08\x12\x1f.google.protobuf.MessageO\
    ptionsR\x18carllercheBytesForString:O\n\x12repeated_field_vec\x18\xfc\
    \x84\x01\x20\x01(\x08\x12\x1f.google.protobuf.MessageOptionsR\x10repeate\
    dFieldVec:O\n\x13expose_fields_field\x18\xeb\x84\x01\x20\x01(\x08\x12\
    \x1d.google.protobuf.FieldOptionsR\x11exposeFieldsField:Y\n\x18generate_\
    accessors_field\x18\xec\x84\x01\x20\x01(\x08\x12\x1d.google.protobuf.Fie\
    ldOptionsR\x16generateAccessorsField:g\n\x20carllerche_bytes_for_bytes_f\
    ield\x18\xf3\x84\x01\x20\x01(\x08\x12\x1d.google.protobuf.FieldOptionsR\
    \x1ccarllercheBytesForBytesField:i\n!carllerche_bytes_for_string_field\
    \x18\xf4\x84\x01\x20\x01(\x08\x12\x1d.google.protobuf.FieldOptionsR\x1dc\
    arllercheBytesForStringField:X\n\x18repeated_field_vec_field\x18\xfc\x84\
    \x01\x20\x01(\x08\x12\x1d.google.protobuf.FieldOptionsR\x15repeatedField\
    VecFieldJ\xe1\x12\n\x06\x12\x04\0\05\x01\n\x08\n\x01\x0c\x12\x03\0\0\x12\
    \n\t\n\x02\x03\0\x12\x03\x02\x07)\n\xe5\x01\n\x01\x02\x12\x03\n\x08\x112\
    ^\x20see\x20https://github.com/gogo/protobuf/blob/master/gogoproto/gogo.\
    proto\n\x20for\x20the\x20original\x20idea\n2{\x20Generated\x20files\x20c\
    an\x20be\x20customized\x20using\x20this\x20proto\n\x20or\x20using\x20`Cu\
    stomize`\x20struct\x20when\x20codegen\x20is\x20invoked\x20programmatical\
    ly.\n\n\t\n\x01\x07\x12\x04\x0c\0\x19\x01\n7\n\x02\x07\0\x12\x03\x0e\x04\
    +\x1a,\x20When\x20true,\x20oneof\x20field\x20is\x20generated\x20public\n\
    \n\n\n\x03\x07\0\x02\x12\x03\x0c\x07\"\n\n\n\x03\x07\0\x04\x12\x03\x0e\
    \x04\x0c\n\n\n\x03\x07\0\x05\x12\x03\x0e\r\x11\n\n\n\x03\x07\0\x01\x12\
    \x03\x0e\x12\"\n\n\n\x03\x07\0\x03\x12\x03\x0e%*\nI\n\x02\x07\x01\x12\
    \x03\x10\x04,\x1a>\x20When\x20true\x20all\x20fields\x20are\x20public,\
    \x20and\x20not\x20accessors\x20generated\n\n\n\n\x03\x07\x01\x02\x12\x03\
    \x0c\x07\"\n\n\n\x03\x07\x01\x04\x12\x03\x10\x04\x0c\n\n\n\x03\x07\x01\
    \x05\x12\x03\x10\r\x11\n\n\n\x03\x07\x01\x01\x12\x03\x10\x12#\n\n\n\x03\
    \x07\x01\x03\x12\x03\x10&+\nP\n\x02\x07\x02\x12\x03\x12\x041\x1aE\x20Whe\
    n\x20false,\x20`get_`,\x20`set_`,\x20`mut_`\x20etc.\x20accessors\x20are\
    \x20not\x20generated\n\n\n\n\x03\x07\x02\x02\x12\x03\x0c\x07\"\n\n\n\x03\
    \x07\x02\x04\x12\x03\x12\x04\x0c\n\n\n\x03\x07\x02\x05\x12\x03\x12\r\x11\
    \n\n\n\x03\x07\x02\x01\x12\x03\x12\x12(\n\n\n\x03\x07\x02\x03\x12\x03\
    \x12+0\n2\n\x02\x07\x03\x12\x03\x14\x049\x1a'\x20Use\x20`bytes::Bytes`\
    \x20for\x20`bytes`\x20fields\n\n\n\n\x03\x07\x03\x02\x12\x03\x0c\x07\"\n\
    \n\n\x03\x07\x03\x04\x12\x03\x14\x04\x0c\n\n\n\x03\x07\x03\x05\x12\x03\
    \x14\r\x11\n\n\n\x03\x07\x03\x01\x12\x03\x14\x120\n\n\n\x03\x07\x03\x03\
    \x12\x03\x1438\n3\n\x02\x07\x04\x12\x03\x16\x04:\x1a(\x20Use\x20`bytes::\
    Bytes`\x20for\x20`string`\x20fields\n\n\n\n\x03\x07\x04\x02\x12\x03\x0c\
    \x07\"\n\n\n\x03\x07\x04\x04\x12\x03\x16\x04\x0c\n\n\n\x03\x07\x04\x05\
    \x12\x03\x16\r\x11\n\n\n\x03\x07\x04\x01\x12\x03\x16\x121\n\n\n\x03\x07\
    \x04\x03\x12\x03\x1649\n=\n\x02\x07\x05\x12\x03\x18\x041\x1a2\x20Use\x20\
    `std::Vec`\x20to\x20store\x20repeated\x20messages\x20fields\n\n\n\n\x03\
    \x07\x05\x02\x12\x03\x0c\x07\"\n\n\n\x03\x07\x05\x04\x12\x03\x18\x04\x0c\
    \n\n\n\x03\x07\x05\x05\x12\x03\x18\r\x11\n\n\n\x03\x07\x05\x01\x12\x03\
    \x18\x12(\n\n\n\x03\x07\x05\x03\x12\x03\x18+0\n\t\n\x01\x07\x12\x04\x1b\
    \0(\x01\n7\n\x02\x07\x06\x12\x03\x1d\x04'\x1a,\x20When\x20true,\x20oneof\
    \x20field\x20is\x20generated\x20public\n\n\n\n\x03\x07\x06\x02\x12\x03\
    \x1b\x07%\n\n\n\x03\x07\x06\x04\x12\x03\x1d\x04\x0c\n\n\n\x03\x07\x06\
    \x05\x12\x03\x1d\r\x11\n\n\n\x03\x07\x06\x01\x12\x03\x1d\x12\x1e\n\n\n\
    \x03\x07\x06\x03\x12\x03\x1d!&\nI\n\x02\x07\x07\x12\x03\x1f\x04(\x1a>\
    \x20When\x20true\x20all\x20fields\x20are\x20public,\x20and\x20not\x20acc\
    essors\x20generated\n\n\n\n\x03\x07\x07\x02\x12\x03\x1b\x07%\n\n\n\x03\
    \x07\x07\x04\x12\x03\x1f\x04\x0c\n\n\n\x03\x07\x07\x05\x12\x03\x1f\r\x11\
    \n\n\n\x03\x07\x07\x01\x12\x03\x1f\x12\x1f\n\n\n\x03\x07\x07\x03\x12\x03\
    \x1f\"'\nP\n\x02\x07\x08\x12\x03!\x04-\x1aE\x20When\x20false,\x20`get_`,\
    \x20`set_`,\x20`mut_`\x20etc.\x20accessors\x20are\x20not\x20generated\n\
    \n\n\n\x03\x07\x08\x02\x12\x03\x1b\x07%\n\n\n\x03\x07\x08\x04\x12\x03!\
    \x04\x0c\n\n\n\x03\x07\x08\x05\x12\x03!\r\x11\n\n\n\x03\x07\x08\x01\x12\
    \x03!\x12$\n\n\n\x03\x07\x08\x03\x12\x03!',\n2\n\x02\x07\t\x12\x03#\x045\
    \x1a'\x20Use\x20`bytes::Bytes`\x20for\x20`bytes`\x20fields\n\n\n\n\x03\
    \x07\t\x02\x12\x03\x1b\x07%\n\n\n\x03\x07\t\x04\x12\x03#\x04\x0c\n\n\n\
    \x03\x07\t\x05\x12\x03#\r\x11\n\n\n\x03\x07\t\x01\x12\x03#\x12,\n\n\n\
    \x03\x07\t\x03\x12\x03#/4\n3\n\x02\x07\n\x12\x03%\x046\x1a(\x20Use\x20`b\
    ytes::Bytes`\x20for\x20`string`\x20fields\n\n\n\n\x03\x07\n\x02\x12\x03\
    \x1b\x07%\n\n\n\x03\x07\n\x04\x12\x03%\x04\x0c\n\n\n\x03\x07\n\x05\x12\
    \x03%\r\x11\n\n\n\x03\x07\n\x01\x12\x03%\x12-\n\n\n\x03\x07\n\x03\x12\
    \x03%05\n<\n\x02\x07\x0b\x12\x03'\x04-\x1a1\x20Use\x20`std::Vec`\x20to\
    \x20store\x20repeated\x20messages\x20field\n\n\n\n\x03\x07\x0b\x02\x12\
    \x03\x1b\x07%\n\n\n\x03\x07\x0b\x04\x12\x03'\x04\x0c\n\n\n\x03\x07\x0b\
    \x05\x12\x03'\r\x11\n\n\n\x03\x07\x0b\x01\x12\x03'\x12$\n\n\n\x03\x07\
    \x0b\x03\x12\x03'',\n\t\n\x01\x07\x12\x04*\05\x01\nI\n\x02\x07\x0c\x12\
    \x03,\x04.\x1a>\x20When\x20true\x20all\x20fields\x20are\x20public,\x20an\
    d\x20not\x20accessors\x20generated\n\n\n\n\x03\x07\x0c\x02\x12\x03*\x07#\
    \n\n\n\x03\x07\x0c\x04\x12\x03,\x04\x0c\n\n\n\x03\x07\x0c\x05\x12\x03,\r\
    \x11\n\n\n\x03\x07\x0c\x01\x12\x03,\x12%\n\n\n\x03\x07\x0c\x03\x12\x03,(\
    -\nP\n\x02\x07\r\x12\x03.\x043\x1aE\x20When\x20false,\x20`get_`,\x20`set\
    _`,\x20`mut_`\x20etc.\x20accessors\x20are\x20not\x20generated\n\n\n\n\
    \x03\x07\r\x02\x12\x03*\x07#\n\n\n\x03\x07\r\x04\x12\x03.\x04\x0c\n\n\n\
    \x03\x07\r\x05\x12\x03.\r\x11\n\n\n\x03\x07\r\x01\x12\x03.\x12*\n\n\n\
    \x03\x07\r\x03\x12\x03.-2\n2\n\x02\x07\x0e\x12\x030\x04;\x1a'\x20Use\x20\
    `bytes::Bytes`\x20for\x20`bytes`\x20fields\n\n\n\n\x03\x07\x0e\x02\x12\
    \x03*\x07#\n\n\n\x03\x07\x0e\x04\x12\x030\x04\x0c\n\n\n\x03\x07\x0e\x05\
    \x12\x030\r\x11\n\n\n\x03\x07\x0e\x01\x12\x030\x122\n\n\n\x03\x07\x0e\
    \x03\x12\x0305:\n3\n\x02\x07\x0f\x12\x032\x04<\x1a(\x20Use\x20`bytes::By\
    tes`\x20for\x20`string`\x20fields\n\n\n\n\x03\x07\x0f\x02\x12\x03*\x07#\
    \n\n\n\x03\x07\x0f\x04\x12\x032\x04\x0c\n\n\n\x03\x07\x0f\x05\x12\x032\r\
    \x11\n\n\n\x03\x07\x0f\x01\x12\x032\x123\n\n\n\x03\x07\x0f\x03\x12\x0326\
    ;\n<\n\x02\x07\x10\x12\x034\x043\x1a1\x20Use\x20`std::Vec`\x20to\x20stor\
    e\x20repeated\x20messages\x20field\n\n\n\n\x03\x07\x10\x02\x12\x03*\x07#\
    \n\n\n\x03\x07\x10\x04\x12\x034\x04\x0c\n\n\n\x03\x07\x10\x05\x12\x034\r\
    \x11\n\n\n\x03\x07\x10\x01\x12\x034\x12*\n\n\n\x03\x07\x10\x03\x12\x034-\
    2\
";

static mut file_descriptor_proto_lazy: ::protobuf::lazy::Lazy<::protobuf::descriptor::FileDescriptorProto> = ::protobuf::lazy::Lazy {
    lock: ::protobuf::lazy::ONCE_INIT,
    ptr: 0 as *const ::protobuf::descriptor::FileDescriptorProto,
};

fn parse_descriptor_proto() -> ::protobuf::descriptor::FileDescriptorProto {
    ::protobuf::parse_from_bytes(file_descriptor_proto_data).unwrap()
}

pub fn file_descriptor_proto() -> &'static ::protobuf::descriptor::FileDescriptorProto {
    unsafe {
        file_descriptor_proto_lazy.get(|| {
            parse_descriptor_proto()
        })
    }
}
